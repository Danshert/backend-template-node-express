// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

enum Role {
  USER_ROLE
  ADMIN_ROLE
}

model User {
  id String @id @default(uuid())
  name String @db.VarChar(200)
  email String @unique
  password String @db.VarChar(100)
  emailValidated Boolean @default(false)
  imageUrl String?
  role Role[] @default([USER_ROLE])
  createdAt DateTime @db.Timestamp() @default(now())
  updatedAt DateTime @db.Timestamp() @default(now())

  board Board[]
  Label Label[]
}

model Board {
  id String @id @default(uuid())
  name String @db.VarChar(200)
  isActive Boolean @default(true)
  createdAt DateTime @db.Timestamp() @default(now())
  updatedAt DateTime @db.Timestamp() @default(now())

  userId String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  Label Label[]
}

model Label {
  id String @id @default(uuid())
  name String @db.VarChar(50)
  color String? @db.VarChar(20)

  userId String
  user User @relation(fields: [userId], references: [id])

  boardId String
  board Board @relation(fields: [boardId], references: [id], onDelete: Cascade)
}
